buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
        springVersion = '4.3.11.RELEASE'

        junitVersion = '4.12'
        lombokVersion = '1.16.18'
        druidVersion = '1.1.3'
        mybatisVersion = '3.4.4'
        tkMybatisVersion = '3.4.0'
        pagehelperVerson = '4.2.1'
        mybatisGeneratorVersion = '1.3.5'
        mybatisBootStarterVersion = '1.3.0'
        pagehelperBootStarterVerson = '1.1.0'
        mapperBootStarterVerson = '1.1.1'
        guavaVersion = '20.0'
        mybatisJsr310Version = '1.0.2'
        mysqlConnectorVersion = '5.1.43'
        rxjavaVersion = '2.1.4'
        caffeineVersion = '2.5.6'
        fastjsonVersion = '1.2.38'
        braveInstVersion = '4.6.0'
        swaggerVersion = '2.7.0'
        dingtalkSdkVersion = '1.0.0'
        validationApiVersion = '2.0.0.Final'
        hibernateValidatorVersion = '6.0.2.Final'
        jjwtVersion = '0.7.0'
        ningVersion = '1.9.40'
    }

    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        maven {
            url "https://raw.githubusercontent.com/pink-lucifer/mvn-repo/master/repository/snapshots/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.3"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.springframework.boot'
apply plugin: "com.arenagod.gradle.MybatisGenerator"
apply plugin: 'maven-publish'

group = 'com.alibaba.dingtalk.openapi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


repositories {
    mavenLocal()
    maven() { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    jcenter()
    mavenCentral()
}

configurations {
    all*.exclude module: "slf4j-log4j12"
    all*.exclude module: "spring-boot-starter-tomcat"
    mybatisGenerator
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile group: 'com.alibaba', name: 'druid-spring-boot-starter', version: "${druidVersion}"
    compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}")
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisBootStarterVersion}")

    compile group: 'com.alibaba', name: 'druid', version: "${druidVersion}"
    compile group: 'com.alibaba', name: 'fastjson', version: "${fastjsonVersion}"
    compile group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: "${caffeineVersion}"
    compile group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"
    compile group: 'io.springfox', name: 'springfox-swagger2', version: "${swaggerVersion}"
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVersion}"
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: "${jjwtVersion}"
    compile group: 'org.hibernate.validator', name: 'hibernate-validator', version: "${hibernateValidatorVersion}"
    compile group: 'javax.validation', name: 'validation-api', version: "${validationApiVersion}"

    compile "org.mybatis.generator:mybatis-generator-core:${mybatisGeneratorVersion}"
    compile group: 'tk.mybatis', name: 'mapper', version: "${tkMybatisVersion}"
    compile group: 'org.mybatis', name: 'mybatis', version: "${mybatisVersion}"
    compile group: 'com.github.pagehelper', name: 'pagehelper', version: "${pagehelperVerson}"
    compile group: 'org.mybatis', name: 'mybatis-typehandlers-jsr310', version: "${mybatisJsr310Version}"


    compile group: 'com.ning', name: 'async-http-client', version: "${ningVersion}"
    compile group: 'com.dingtalk.open', name: 'client-sdk.core', version: "${dingtalkSdkVersion}"
    compile group: 'com.dingtalk.open', name: 'client-sdk.common', version: "${dingtalkSdkVersion}"
    compile group: 'com.dingtalk.open', name: 'client-sdk.api', version: "${dingtalkSdkVersion}"
    compile group: 'com.dingtalk.open', name: 'client-sdk.spring', version: "${dingtalkSdkVersion}"


    compileOnly('org.projectlombok:lombok')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompileOnly('org.projectlombok:lombok')
}


mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/autogen/generatorConfig.xml'
    dependencies {
        mybatisGenerator ('com.github.lufs:mybatis-java8-type-resolvers:0.0.1-SNAPSHOT')
        mybatisGenerator "org.mybatis.generator:mybatis-generator-core:${mybatisGeneratorVersion}"
        mybatisGenerator "mysql:mysql-connector-java:${mysqlConnectorVersion}"
        mybatisGenerator "tk.mybatis:mapper:${tkMybatisVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
        }
    }
}
publishing {
    repositories {
        maven {
            url "http://127.0.0.1:8081/nexus/repository/maven-snapshots/"
            credentials {
                username = 'admin'
                password = 'password'
            }
        }
    }
}
